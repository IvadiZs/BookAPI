// <auto-generated />
using System;
using BookAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookAPI.Migrations
{
    [DbContext(typeof(BookdbContext))]
    partial class BookdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("BookAPI.Models.Konyv", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("char(50)")
                        .HasColumnName("id");

                    b.Property<string>("Cim")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cim");

                    b.Property<int>("Kiadev")
                        .HasColumnType("int(11)")
                        .HasColumnName("kiadev");

                    b.Property<int>("Oldalszam")
                        .HasColumnType("int(11)")
                        .HasColumnName("oldalszam");

                    b.Property<Guid>("SzerzoId")
                        .HasMaxLength(50)
                        .HasColumnType("char(50)")
                        .HasColumnName("szerzo_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SzerzoId" }, "szerzo_id");

                    b.ToTable("konyv", (string)null);
                });

            modelBuilder.Entity("BookAPI.Models.Nemzetiseg", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("char(50)")
                        .HasColumnName("id");

                    b.Property<string>("SzerzoNemz")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("szerzo_nemz");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("nemzetiseg", (string)null);
                });

            modelBuilder.Entity("BookAPI.Models.Szerzo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("char(50)")
                        .HasColumnName("id");

                    b.Property<string>("Nem")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nem");

                    b.Property<Guid>("NemzId")
                        .HasMaxLength(50)
                        .HasColumnType("char(50)")
                        .HasColumnName("nemz_id");

                    b.Property<string>("Nev")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nev");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NemzId" }, "nemz_id");

                    b.ToTable("szerzo", (string)null);
                });

            modelBuilder.Entity("BookAPI.Models.Konyv", b =>
                {
                    b.HasOne("BookAPI.Models.Szerzo", "Szerzo")
                        .WithMany("Konyvs")
                        .HasForeignKey("SzerzoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("konyv_ibfk_1");

                    b.Navigation("Szerzo");
                });

            modelBuilder.Entity("BookAPI.Models.Szerzo", b =>
                {
                    b.HasOne("BookAPI.Models.Nemzetiseg", "Nemz")
                        .WithMany("Szerzos")
                        .HasForeignKey("NemzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("szerzo_ibfk_1");

                    b.Navigation("Nemz");
                });

            modelBuilder.Entity("BookAPI.Models.Nemzetiseg", b =>
                {
                    b.Navigation("Szerzos");
                });

            modelBuilder.Entity("BookAPI.Models.Szerzo", b =>
                {
                    b.Navigation("Konyvs");
                });
#pragma warning restore 612, 618
        }
    }
}
